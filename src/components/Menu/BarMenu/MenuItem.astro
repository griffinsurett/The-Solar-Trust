---
/*
  MenuItem.astro
  Uses our shared <Button> (with no changes) and overrides
  the `link` variant’s text color when `active` is true.
*/
const {
  item,
  isHierarchical = true,
  depth = 0,
  menuItem,           // { component, class, submenuArrow }
  submenuItem,        // { component, class, submenuArrow }
  breakpoint,
  active = false,     // whether this route is active
} = Astro.props;

import Button from "@/components/Button.jsx";
import SubMenu from "./SubMenu.astro";

// Does this item have children?
const hasSub = isHierarchical && Array.isArray(item.children) && item.children.length > 0;

// Base class from the menu config
const baseClass = menuItem?.class || "";
const arrow = menuItem?.submenuArrow || "▼";
---
<li class="relative hamburger-menu-item">
  <!--
    Use the link variant, but append "!text-primary !font-bold"
    when active. The `!` ensures these utilities win over the variant.
  -->
  <Button
    as="a"
    href={item.slug}
    variant="link"
    className={`flex items-center ${baseClass} ${
      active ? "!text-primary !font-bold" : ""
    }`}
  >
    {item.label}
    {hasSub && (
      <span class="arrow ml-[var(--spacing-sm)] text-base transition-transform duration-200">
        {arrow}
      </span>
    )}
  </Button>

  {hasSub && (
    <SubMenu
      items={item.children}
      depth={depth + 1}
      menuItem={menuItem}
      submenuItem={submenuItem}
      isHierarchical={isHierarchical}
      breakpoint={breakpoint}
    />
  )}
</li>
